{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'CitySearch',\n  data() {\n    return {\n      city: '',\n      generalInfo: null,\n      economyInfo: null,\n      weatherInfo: null,\n      touristInfo: null,\n      newsInfo: null,\n      loading: false,\n      error: null,\n      currentView: 'general',\n      map: null,\n      // 用于保存地图实例\n      cityCoordinates: null // 城市经纬度\n    };\n  },\n  computed: {\n    hasResults() {\n      return this.generalInfo || this.economyInfo || this.weatherInfo || this.touristInfo || this.newsInfo;\n    }\n  },\n  methods: {\n    async search() {\n      if (!this.city.trim()) {\n        this.$router.push({\n          path: '/results',\n          query: {\n            city: this.city\n          }\n        });\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.generalInfo = null;\n      this.economyInfo = null;\n      this.weatherInfo = null;\n      this.touristInfo = null;\n      this.newsInfo = null;\n      this.cityCoordinates = null;\n      try {\n        const [generalRes, economyRes, weatherRes, touristRes, newsRes, locationRes] = await Promise.all([axios.get(`/api/city/general/${this.city}`), axios.get(`/api/city/economy/${this.city}`), axios.get(`/api/city/weather/${this.city}`), axios.get(`/api/city/tourist/${this.city}`), axios.get(`/api/city/news/${this.city}`), axios.get(`/api/city/location/${this.city}`) // 获取城市经纬度\n        ]);\n        this.generalInfo = generalRes.data;\n        this.economyInfo = economyRes.data;\n        this.weatherInfo = weatherRes.data;\n        this.touristInfo = touristRes.data;\n        this.newsInfo = newsRes.data;\n        this.cityCoordinates = [parseFloat(locationRes.data.longitude), parseFloat(locationRes.data.latitude)];\n        if (this.currentView === 'map') {\n          this.updateMap(); // 如果当前视图是地图，更新地图中心\n        }\n      } catch (err) {\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    loadMapScript() {\n      return new Promise(resolve => {\n        if (typeof window.AMap !== 'undefined') {\n          resolve();\n          return;\n        }\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = `https://webapi.amap.com/maps?v=1.4.15&key=881f79d9bcb3d58aaf6004896e856a06`;\n        script.onload = () => {\n          resolve();\n        };\n        document.head.appendChild(script);\n      });\n    },\n    async initializeMap() {\n      await this.loadMapScript();\n      const mapContainer = document.getElementById('map-container');\n      mapContainer.innerHTML = ''; // 确保地图容器每次都清空\n\n      this.map = new window.AMap.Map('map-container', {\n        resizeEnable: true,\n        zoom: 11,\n        center: this.cityCoordinates || [116.397428, 39.90923] // 如果没有城市坐标，默认北京\n      });\n    },\n    async updateMap() {\n      if (this.map) {\n        this.map.destroy(); // 清除之前的地图实例\n        this.map = null; // 设置为null，确保下次重新创建地图\n      }\n      await this.initializeMap(); // 重新初始化地图\n    }\n  },\n  watch: {\n    currentView(newVal) {\n      if (newVal === 'map') {\n        this.updateMap();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","city","generalInfo","economyInfo","weatherInfo","touristInfo","newsInfo","loading","error","currentView","map","cityCoordinates","computed","hasResults","methods","search","trim","$router","push","path","query","generalRes","economyRes","weatherRes","touristRes","newsRes","locationRes","Promise","all","get","parseFloat","longitude","latitude","updateMap","err","message","loadMapScript","resolve","window","AMap","script","document","createElement","type","src","onload","head","appendChild","initializeMap","mapContainer","getElementById","innerHTML","Map","resizeEnable","zoom","center","destroy","watch","newVal"],"sources":["D:\\courseHomework\\microService\\frontend\\src\\components\\CitySearch.vue"],"sourcesContent":["<template> \n  <div class=\"city-search-page\">\n    <aside class=\"sidebar\">\n      <nav>\n        <ul>\n          <li @click=\"currentView = 'general'\" :class=\"{ active: currentView === 'general' }\">基本信息</li>\n          <li @click=\"currentView = 'economy'\" :class=\"{ active: currentView === 'economy' }\">经济信息</li>\n          <li @click=\"currentView = 'weather'\" :class=\"{ active: currentView === 'weather' }\">天气预报</li>\n          <li @click=\"currentView = 'tourist'\" :class=\"{ active: currentView === 'tourist' }\">旅游景点</li>\n          <li @click=\"currentView = 'news'\" :class=\"{ active: currentView === 'news' }\">新闻</li>\n          <li @click=\"currentView = 'map'\" :class=\"{ active: currentView === 'map' }\">地图</li> <!-- 新增地图菜单项 -->\n        </ul>\n      </nav>\n    </aside>\n\n    <main class=\"main-content\">\n      <div class=\"search-section\">\n        <input v-model=\"city\" @keyup.enter=\"search\" placeholder=\"输入城市名称\" class=\"search-input\" />\n        <button @click=\"search\" class=\"search-button\">搜索</button>\n      </div>\n\n      <div v-if=\"loading\" class=\"loading-section\">加载中...</div>\n      <div v-if=\"error\" class=\"error-section\">出错了: {{ error }}</div>\n\n      <div v-if=\"!loading && !error && hasResults\" class=\"result-section\">\n        <!-- 根据 currentView 显示不同的内容 -->\n        <div v-if=\"currentView === 'general'\" class=\"info-section my-animation-fade-in\">\n          <h3>基本信息</h3>\n          <p>{{ generalInfo.title }} - {{ generalInfo.extract }}</p>\n          <a :href=\"generalInfo.url\" target=\"_blank\" class=\"link\">查看更多</a>\n        </div>\n\n        <div v-if=\"currentView === 'economy'\" class=\"info-section my-animation-fade-in\">\n          <h3>经济信息</h3>\n          <ul>\n            <li v-for=\"item in economyInfo\" :key=\"item.url\">\n              <a :href=\"item.url\" target=\"_blank\" class=\"link\">{{ item.title }}</a>\n            </li>\n          </ul>\n        </div>\n\n        <div v-if=\"currentView === 'weather'\" class=\"info-section my-animation-fade-in\">\n          <h3>天气预报</h3>\n          <ul>\n            <li v-for=\"(weather, index) in weatherInfo\" :key=\"index\">\n              白天: {{ weather.textDay }}，夜间: {{ weather.textNight }}，最高温度: {{ weather.tempMax }}℃，最低温度: {{ weather.tempMin }}℃，风向: {{ weather.windDirDay }}，风力: {{ weather.windScaleDay }}，紫外线指数: {{ weather.uvIndex }}\n            </li>\n          </ul>\n        </div>\n\n        <div v-if=\"currentView === 'tourist'\" class=\"info-section my-animation-fade-in\">\n          <h3>旅游景点</h3>\n          <ul>\n            <li v-for=\"spot in touristInfo\" :key=\"spot.name\">\n              {{ spot.name }} - 地址: {{ spot.address }} ({{ spot.area }}), 电话: {{ spot.telephone }}\n            </li>\n          </ul>\n        </div>\n\n        <div v-if=\"currentView === 'news'\" class=\"info-section my-animation-fade-in\">\n          <h3>新闻</h3>\n          <ul>\n            <li v-for=\"newsItem in newsInfo.news\" :key=\"newsItem.url\">\n              <a :href=\"newsItem.url\" target=\"_blank\" class=\"link\">{{ newsItem.title }}</a>\n            </li>\n          </ul>\n        </div>\n\n        <!-- 新增地图显示区域 -->\n        <div v-if=\"currentView === 'map'\" class=\"map-full-section my-animation-fade-in\">\n          <h3>地图</h3>\n          <div id=\"map-container\"></div> <!-- 地图容器 -->\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'CitySearch',\n  data() {\n    return {\n      city: '',\n      generalInfo: null,\n      economyInfo: null,\n      weatherInfo: null,\n      touristInfo: null,\n      newsInfo: null,\n      loading: false,\n      error: null,\n      currentView: 'general',\n      map: null,  // 用于保存地图实例\n      cityCoordinates: null, // 城市经纬度\n    };\n  },\n  computed: {\n    hasResults() {\n      return this.generalInfo || this.economyInfo || this.weatherInfo || this.touristInfo || this.newsInfo;\n    }\n  },\n  methods: {\n    async search() {\n      if (!this.city.trim()) {\n        this.$router.push({ path: '/results', query: { city: this.city } });\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.generalInfo = null;\n      this.economyInfo = null;\n      this.weatherInfo = null;\n      this.touristInfo = null;\n      this.newsInfo = null;\n      this.cityCoordinates = null;\n\n      try {\n        const [generalRes, economyRes, weatherRes, touristRes, newsRes, locationRes] = await Promise.all([\n          axios.get(`/api/city/general/${this.city}`),\n          axios.get(`/api/city/economy/${this.city}`),\n          axios.get(`/api/city/weather/${this.city}`),\n          axios.get(`/api/city/tourist/${this.city}`),\n          axios.get(`/api/city/news/${this.city}`),\n          axios.get(`/api/city/location/${this.city}`), // 获取城市经纬度\n        ]);\n\n        this.generalInfo = generalRes.data;\n        this.economyInfo = economyRes.data;\n        this.weatherInfo = weatherRes.data;\n        this.touristInfo = touristRes.data;\n        this.newsInfo = newsRes.data;\n        this.cityCoordinates = [parseFloat(locationRes.data.longitude), parseFloat(locationRes.data.latitude)];\n\n        if (this.currentView === 'map') {\n          this.updateMap(); // 如果当前视图是地图，更新地图中心\n        }\n      } catch (err) {\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    loadMapScript() {\n      return new Promise((resolve) => {\n        if (typeof window.AMap !== 'undefined') {\n          resolve();\n          return;\n        }\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = `https://webapi.amap.com/maps?v=1.4.15&key=881f79d9bcb3d58aaf6004896e856a06`;\n        script.onload = () => {\n          resolve();\n        };\n        document.head.appendChild(script);\n      });\n    },\n      async initializeMap() {\n        await this.loadMapScript();\n        const mapContainer = document.getElementById('map-container');\n        mapContainer.innerHTML = '';  // 确保地图容器每次都清空\n  \n        this.map = new window.AMap.Map('map-container', {\n            resizeEnable: true,\n            zoom: 11,\n    center: this.cityCoordinates || [116.397428, 39.90923], // 如果没有城市坐标，默认北京\n  });\n}\n,\n    async updateMap() {\n      if (this.map) {\n        this.map.destroy();  // 清除之前的地图实例\n        this.map = null;     // 设置为null，确保下次重新创建地图\n      }\n      await this.initializeMap();  // 重新初始化地图\n    },\n},\n  watch: {\n    currentView(newVal) {\n      if (newVal === 'map') {\n        this.updateMap();\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\n\n.city-search-page {\n  display: flex;\n  min-height: 100vh;\n  background-color: #f0f4f7;\n  font-family: 'Roboto', sans-serif;\n}\n\n.sidebar {\n  width: 15%;\n  background-color: #3fcea1;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n}\n\n.sidebar ul {\n  list-style: none;\n  padding: 0;\n}\n\n.sidebar li {\n  margin: 10px 0;\n  padding: 10px;\n  color: white;\n  cursor: pointer;\n  text-align: center;\n  transition: background-color 0.3s ease;\n}\n\n.sidebar li.active, .sidebar li:hover {\n  background-color: #2ea789;\n}\n\n.main-content {\n  width: 85%;\n  padding: 40px;\n  background-color: white;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n}\n\n.search-section {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.search-input {\n  flex: 1;\n  padding: 10px;\n  border: 2px solid #ced4da;\n  border-radius: 5px;\n  font-size: 16px;\n}\n\n.search-button {\n  padding: 10px 20px;\n  background-color: #3fcea1;\n  border: none;\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.search-button:hover {\n  background-color: #2ea789;\n}\n\n.result-section {\n  margin-top: 20px;\n}\n\n.info-section {\n  padding: 16px;\n  background-color: #f0f0f0;\n}\n\n.map-full-section {\n  width: 100%;\n  height: 500px;\n}\n\n#map-container {\n  width: 100%;\n  height: 100%;\n}\n\n.link {\n  color: #3fcea1;\n  text-decoration: none;\n  font-weight: bold;\n}\n\n.link:hover {\n  text-decoration: underline;\n}\n\n.loading-section,\n.error-section {\n  margin-top: 20px;\n  color: red;\n}\n\n/* Slide-in and fade-in animations */\n.my-animation-fade-in {\n  animation: fade-in 0.5s ease-out forwards;\n}\n\n@keyframes fade-in {\n  0% {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}