{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport MapContainer from './MapContainer.vue'; // 导入地图组件\n\nexport default {\n  components: {\n    MapContainer // 注册地图组件\n  },\n  data() {\n    return {\n      city: '',\n      generalInfo: null,\n      economyInfo: null,\n      weatherInfo: null,\n      touristInfo: null,\n      newsInfo: null,\n      locationInfo: null,\n      // 保存位置信息\n      loading: false,\n      error: null,\n      currentView: 'general' // 默认显示基本信息\n    };\n  },\n  methods: {\n    async search() {\n      if (!this.city.trim()) {\n        this.$router.push({\n          path: '/results',\n          query: {\n            city: this.city\n          }\n        });\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.generalInfo = null;\n      this.economyInfo = null;\n      this.weatherInfo = null;\n      this.touristInfo = null;\n      this.newsInfo = null;\n      this.locationInfo = null;\n      try {\n        const [generalRes, economyRes, weatherRes, touristRes, newsRes, locationRes] = await Promise.all([axios.get(`/api/city/general/${this.city}`), axios.get(`/api/city/economy/${this.city}`), axios.get(`/api/city/weather/${this.city}`), axios.get(`/api/city/tourist/${this.city}`), axios.get(`/api/city/news/${this.city}`), axios.get(`/api/city/location/${this.city}`) // 从后端获取城市经纬度\n        ]);\n        this.generalInfo = generalRes.data;\n        this.economyInfo = economyRes.data;\n        this.weatherInfo = weatherRes.data;\n        this.touristInfo = touristRes.data;\n        this.newsInfo = newsRes.data;\n        this.locationInfo = locationRes.data; // 获取城市经纬度\n      } catch (err) {\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","MapContainer","components","data","city","generalInfo","economyInfo","weatherInfo","touristInfo","newsInfo","locationInfo","loading","error","currentView","methods","search","trim","$router","push","path","query","generalRes","economyRes","weatherRes","touristRes","newsRes","locationRes","Promise","all","get","err","message"],"sources":["D:\\courseHomework\\microService\\frontend\\src\\components\\CitySearch.vue"],"sourcesContent":["<template>\n  <div class=\"city-search-page\">\n    <aside class=\"sidebar\">\n      <nav>\n        <ul>\n          <li @click=\"currentView = 'general'\" :class=\"{ active: currentView === 'general' }\">基本信息</li>\n          <li @click=\"currentView = 'economy'\" :class=\"{ active: currentView === 'economy' }\">经济信息</li>\n          <li @click=\"currentView = 'weather'\" :class=\"{ active: currentView === 'weather' }\">天气预报</li>\n          <li @click=\"currentView = 'tourist'\" :class=\"{ active: currentView === 'tourist' }\">旅游景点</li>\n          <li @click=\"currentView = 'news'\" :class=\"{ active: currentView === 'news' }\">新闻</li>\n        </ul>\n      </nav>\n    </aside>\n\n    <main class=\"main-content\">\n      <div class=\"search-section\">\n        <input v-model=\"city\" @keyup.enter=\"search\" placeholder=\"输入城市名称\" class=\"search-input\" />\n        <button @click=\"search\" class=\"search-button\">搜索</button>\n      </div>\n\n      <div v-if=\"loading\" class=\"loading-section\">加载中...</div>\n      <div v-if=\"error\" class=\"error-section\">出错了: {{ error }}</div>\n\n      <div v-if=\"!loading && !error && hasResults\" class=\"result-section\">\n        <div class=\"info-and-map\">\n          <div class=\"info-section\">\n            <h3>{{ currentView === 'general' ? '基本信息' : '' }}</h3>\n            <p>这里是关于城市的基本信息等...</p>\n          </div>\n\n          <!-- 地图展示区域，使用 MapContainer 组件 -->\n          <div class=\"map-section\">\n            <MapContainer /> <!-- 地图显示的地方 -->\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport MapContainer from './MapContainer.vue';  // 导入地图组件\n\nexport default {\n  components: {\n    MapContainer,  // 注册地图组件\n  },\n  data() {\n    return {\n      city: '',\n      generalInfo: null,\n      economyInfo: null,\n      weatherInfo: null,\n      touristInfo: null,\n      newsInfo: null,\n      locationInfo: null, // 保存位置信息\n      loading: false,\n      error: null,\n      currentView: 'general',  // 默认显示基本信息\n    };\n  },\n  methods: {\n    async search() {\n      if (!this.city.trim()) {\n        this.$router.push({ path: '/results', query: { city: this.city } });\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.generalInfo = null;\n      this.economyInfo = null;\n      this.weatherInfo = null;\n      this.touristInfo = null;\n      this.newsInfo = null;\n      this.locationInfo = null;\n\n      try {\n        const [generalRes, economyRes, weatherRes, touristRes, newsRes, locationRes] = await Promise.all([\n          axios.get(`/api/city/general/${this.city}`),\n          axios.get(`/api/city/economy/${this.city}`),\n          axios.get(`/api/city/weather/${this.city}`),\n          axios.get(`/api/city/tourist/${this.city}`),\n          axios.get(`/api/city/news/${this.city}`),\n          axios.get(`/api/city/location/${this.city}`),  // 从后端获取城市经纬度\n        ]);\n\n        this.generalInfo = generalRes.data;\n        this.economyInfo = economyRes.data;\n        this.weatherInfo = weatherRes.data;\n        this.touristInfo = touristRes.data;\n        this.newsInfo = newsRes.data;\n        this.locationInfo = locationRes.data;  // 获取城市经纬度\n      } catch (err) {\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.city-search-page {\n  display: flex;\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px;\n}\n\n.search-section {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.result-section {\n  display: flex;\n  flex-direction: column;\n}\n\n.info-and-map {\n  display: flex; /* 使用 flex 布局让信息和地图并排显示 */\n  gap: 20px; /* 控制两者的间距 */\n}\n\n.info-section {\n  flex: 1; /* 信息部分占用剩余空间 */\n  padding: 10px;\n  background-color: #f0f0f0;\n  border-radius: 8px;\n}\n\n.map-section {\n  width: 600px; /* 给地图设置一个固定宽度 */\n  height: 400px;\n}\n</style>\n"],"mappings":";AAyCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,YAAW,MAAO,oBAAoB,EAAG;;AAEhD,eAAe;EACbC,UAAU,EAAE;IACVD,YAAY,CAAG;EACjB,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE,IAAI;MAAE;MACpBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,IAAI;MACXC,WAAW,EAAE,SAAS,CAAG;IAC3B,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,CAAC,EAAE;QACrB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE,UAAU;UAAEC,KAAK,EAAE;YAAEhB,IAAI,EAAE,IAAI,CAACA;UAAK;QAAE,CAAC,CAAC;QACnE;MACF;MACA,IAAI,CAACO,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,IAAI;MACjB,IAAI,CAACP,WAAU,GAAI,IAAI;MACvB,IAAI,CAACC,WAAU,GAAI,IAAI;MACvB,IAAI,CAACC,WAAU,GAAI,IAAI;MACvB,IAAI,CAACC,WAAU,GAAI,IAAI;MACvB,IAAI,CAACC,QAAO,GAAI,IAAI;MACpB,IAAI,CAACC,YAAW,GAAI,IAAI;MAExB,IAAI;QACF,MAAM,CAACW,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,OAAO,EAAEC,WAAW,IAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC/F5B,KAAK,CAAC6B,GAAG,CAAC,qBAAqB,IAAI,CAACzB,IAAI,EAAE,CAAC,EAC3CJ,KAAK,CAAC6B,GAAG,CAAC,qBAAqB,IAAI,CAACzB,IAAI,EAAE,CAAC,EAC3CJ,KAAK,CAAC6B,GAAG,CAAC,qBAAqB,IAAI,CAACzB,IAAI,EAAE,CAAC,EAC3CJ,KAAK,CAAC6B,GAAG,CAAC,qBAAqB,IAAI,CAACzB,IAAI,EAAE,CAAC,EAC3CJ,KAAK,CAAC6B,GAAG,CAAC,kBAAkB,IAAI,CAACzB,IAAI,EAAE,CAAC,EACxCJ,KAAK,CAAC6B,GAAG,CAAC,sBAAsB,IAAI,CAACzB,IAAI,EAAE,CAAC,CAAG;QAAA,CAChD,CAAC;QAEF,IAAI,CAACC,WAAU,GAAIgB,UAAU,CAAClB,IAAI;QAClC,IAAI,CAACG,WAAU,GAAIgB,UAAU,CAACnB,IAAI;QAClC,IAAI,CAACI,WAAU,GAAIgB,UAAU,CAACpB,IAAI;QAClC,IAAI,CAACK,WAAU,GAAIgB,UAAU,CAACrB,IAAI;QAClC,IAAI,CAACM,QAAO,GAAIgB,OAAO,CAACtB,IAAI;QAC5B,IAAI,CAACO,YAAW,GAAIgB,WAAW,CAACvB,IAAI,EAAG;MACzC,EAAE,OAAO2B,GAAG,EAAE;QACZ,IAAI,CAAClB,KAAI,GAAIkB,GAAG,CAACC,OAAO;MAC1B,UAAU;QACR,IAAI,CAACpB,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}