{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'CitySearch',\n  data() {\n    return {\n      city: '',\n      generalInfo: null,\n      economyInfo: null,\n      weatherInfo: null,\n      touristInfo: null,\n      newsInfo: null,\n      loading: false,\n      error: null,\n      currentView: 'general',\n      map: null // 用于保存地图实例\n    };\n  },\n  computed: {\n    hasResults() {\n      return this.generalInfo || this.economyInfo || this.weatherInfo || this.touristInfo || this.newsInfo;\n    }\n  },\n  mounted() {\n    this.loadMap(); // 在组件加载时初始化地图\n  },\n  methods: {\n    async search() {\n      if (!this.city.trim()) {\n        this.$router.push({\n          path: '/results',\n          query: {\n            city: this.city\n          }\n        });\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.generalInfo = null;\n      this.economyInfo = null;\n      this.weatherInfo = null;\n      this.touristInfo = null;\n      this.newsInfo = null;\n      try {\n        const [generalRes, economyRes, weatherRes, touristRes, newsRes] = await Promise.all([axios.get(`/api/city/general/${this.city}`), axios.get(`/api/city/economy/${this.city}`), axios.get(`/api/city/weather/${this.city}`), axios.get(`/api/city/tourist/${this.city}`), axios.get(`/api/city/news/${this.city}`)]);\n        this.generalInfo = generalRes.data;\n        this.economyInfo = economyRes.data;\n        this.weatherInfo = weatherRes.data;\n        this.touristInfo = touristRes.data;\n        this.newsInfo = newsRes.data;\n        this.updateMap(); // 当搜索结束时更新地图\n      } catch (err) {\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 加载高德地图\n    loadMap() {\n      const script = document.createElement('script');\n      script.src = `https://webapi.amap.com/maps?v=1.4.15&key=881f79d9bcb3d58aaf6004896e856a06`; // 使用你的 API key\n      script.onload = this.initializeMap;\n      document.head.appendChild(script);\n    },\n    initializeMap() {\n      if (window.AMap) {\n        this.map = new window.AMap.Map('map-container', {\n          resizeEnable: true,\n          // 是否监控地图容器尺寸变化\n          zoom: 11,\n          // 初始化地图层级\n          center: [116.397428, 39.90923] // 初始化地图中心点（默认北京）\n        });\n      } else {\n        console.error('AMap API 未成功加载');\n      }\n    },\n    updateMap() {\n      if (this.map && this.city) {\n        // 更新地图中心点到搜索的城市位置（这里只是一个示例，实际可能需要获取城市的经纬度）\n        this.map.setCenter([116.397428, 39.90923]); // 示例中心点，实际可根据搜索结果更新\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","city","generalInfo","economyInfo","weatherInfo","touristInfo","newsInfo","loading","error","currentView","map","computed","hasResults","mounted","loadMap","methods","search","trim","$router","push","path","query","generalRes","economyRes","weatherRes","touristRes","newsRes","Promise","all","get","updateMap","err","message","script","document","createElement","src","onload","initializeMap","head","appendChild","window","AMap","Map","resizeEnable","zoom","center","console","setCenter"],"sources":["D:\\courseHomework\\microService\\frontend\\src\\components\\CitySearch.vue"],"sourcesContent":["<template> \n  <div class=\"city-search-page\">\n    <aside class=\"sidebar\">\n      <nav>\n        <ul>\n          <li @click=\"currentView = 'general'\" :class=\"{ active: currentView === 'general' }\">基本信息</li>\n          <li @click=\"currentView = 'economy'\" :class=\"{ active: currentView === 'economy' }\">经济信息</li>\n          <li @click=\"currentView = 'weather'\" :class=\"{ active: currentView === 'weather' }\">天气预报</li>\n          <li @click=\"currentView = 'tourist'\" :class=\"{ active: currentView === 'tourist' }\">旅游景点</li>\n          <li @click=\"currentView = 'news'\" :class=\"{ active: currentView === 'news' }\">新闻</li>\n        </ul>\n      </nav>\n    </aside>\n\n    <main class=\"main-content\">\n      <div class=\"search-section\">\n        <input v-model=\"city\" @keyup.enter=\"search\" placeholder=\"输入城市名称\" class=\"search-input\" />\n        <button @click=\"search\" class=\"search-button\">搜索</button>\n      </div>\n\n      <div v-if=\"loading\" class=\"loading-section\">加载中...</div>\n      <div v-if=\"error\" class=\"error-section\">出错了: {{ error }}</div>\n\n      <div v-if=\"!loading && !error && hasResults\" class=\"result-section\">\n        <div class=\"info-and-map\">\n          <div v-if=\"currentView === 'general'\" class=\"info-section my-animation-fade-in\">\n            <h3>基本信息</h3>\n            <p>{{ generalInfo.title }} - {{ generalInfo.extract }}</p>\n            <a :href=\"generalInfo.url\" target=\"_blank\" class=\"link\">查看更多</a>\n          </div>\n\n          <div v-if=\"currentView === 'economy'\" class=\"info-section my-animation-fade-in\">\n            <h3>经济信息</h3>\n            <ul>\n              <li v-for=\"item in economyInfo\" :key=\"item.url\">\n                <a :href=\"item.url\" target=\"_blank\" class=\"link\">{{ item.title }}</a>\n              </li>\n            </ul>\n          </div>\n\n          <div v-if=\"currentView === 'weather'\" class=\"info-section my-animation-fade-in\">\n            <h3>天气预报</h3>\n            <ul>\n              <li v-for=\"(weather, index) in weatherInfo\" :key=\"index\">\n                白天: {{ weather.textDay }}，夜间: {{ weather.textNight }}，最高温度: {{ weather.tempMax }}℃，最低温度: {{ weather.tempMin }}℃，风向: {{ weather.windDirDay }}，风力: {{ weather.windScaleDay }}，紫外线指数: {{ weather.uvIndex }}\n              </li>\n            </ul>\n          </div>\n\n          <div v-if=\"currentView === 'tourist'\" class=\"info-section my-animation-fade-in\">\n            <h3>旅游景点</h3>\n            <ul>\n              <li v-for=\"spot in touristInfo\" :key=\"spot.name\">\n                {{ spot.name }} - 地址: {{ spot.address }} ({{ spot.area }}), 电话: {{ spot.telephone }}\n              </li>\n            </ul>\n          </div>\n\n          <div v-if=\"currentView === 'news'\" class=\"info-section my-animation-fade-in\">\n            <h3>新闻</h3>\n            <ul>\n              <li v-for=\"newsItem in newsInfo.news\" :key=\"newsItem.url\">\n                <a :href=\"newsItem.url\" target=\"_blank\" class=\"link\">{{ newsItem.title }}</a>\n              </li>\n            </ul>\n          </div>\n\n          <!-- 地图展示区域 -->\n          <div class=\"map-section my-animation-fade-in\">\n            <div id=\"map-container\"></div> <!-- 地图容器 -->\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'CitySearch',\n  data() {\n    return {\n      city: '',\n      generalInfo: null,\n      economyInfo: null,\n      weatherInfo: null,\n      touristInfo: null,\n      newsInfo: null,\n      loading: false,\n      error: null,\n      currentView: 'general',\n      map: null,  // 用于保存地图实例\n    };\n  },\n  computed: {\n    hasResults() {\n      return this.generalInfo || this.economyInfo || this.weatherInfo || this.touristInfo || this.newsInfo;\n    }\n  },\n  mounted() {\n    this.loadMap();  // 在组件加载时初始化地图\n  },\n  methods: {\n    async search() {\n      if (!this.city.trim()) {\n        this.$router.push({ path: '/results', query: { city: this.city } });\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.generalInfo = null;\n      this.economyInfo = null;\n      this.weatherInfo = null;\n      this.touristInfo = null;\n      this.newsInfo = null;\n\n      try {\n        const [generalRes, economyRes, weatherRes, touristRes, newsRes] = await Promise.all([\n          axios.get(`/api/city/general/${this.city}`),\n          axios.get(`/api/city/economy/${this.city}`),\n          axios.get(`/api/city/weather/${this.city}`),\n          axios.get(`/api/city/tourist/${this.city}`),\n          axios.get(`/api/city/news/${this.city}`),\n        ]);\n\n        this.generalInfo = generalRes.data;\n        this.economyInfo = economyRes.data;\n        this.weatherInfo = weatherRes.data;\n        this.touristInfo = touristRes.data;\n        this.newsInfo = newsRes.data;\n\n        this.updateMap();  // 当搜索结束时更新地图\n      } catch (err) {\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 加载高德地图\n    loadMap() {\n      const script = document.createElement('script');\n      script.src = `https://webapi.amap.com/maps?v=1.4.15&key=881f79d9bcb3d58aaf6004896e856a06`; // 使用你的 API key\n      script.onload = this.initializeMap;\n      document.head.appendChild(script);\n    },\n    initializeMap() {\n      if (window.AMap) {\n        this.map = new window.AMap.Map('map-container', {\n          resizeEnable: true, // 是否监控地图容器尺寸变化\n          zoom: 11, // 初始化地图层级\n          center: [116.397428, 39.90923], // 初始化地图中心点（默认北京）\n        });\n      } else {\n        console.error('AMap API 未成功加载');\n      }\n    },\n    updateMap() {\n      if (this.map && this.city) {\n        // 更新地图中心点到搜索的城市位置（这里只是一个示例，实际可能需要获取城市的经纬度）\n        this.map.setCenter([116.397428, 39.90923]); // 示例中心点，实际可根据搜索结果更新\n      }\n    }\n  }\n};\n</script>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}